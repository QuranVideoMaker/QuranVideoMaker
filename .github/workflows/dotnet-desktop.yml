name: Build

on:
  push:
    branches: [ "main" ]
    
jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]
    
    runs-on: ubuntu-latest
    
    steps:
    - name: checkout
      uses: actions/checkout@v3
      
    - name: install dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0
    
    - name: set version
      run: |
        cd src
        echo 0.0.${{github.run_number}} > ./QuranVideoMaker/Resources/VERSION.txt

    - name: restore
      run: |
        cd src
        dotnet restore
      
    - name: publish
      run: |
        cd src
        dotnet publish -c release -r win-x64 --self-contained
        
    - name: download ffmpeg
      run: wget https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl-shared.zip -O ./ffmpeg.zip
    
    - name: extract ffmpeg
      run: unzip ./ffmpeg.zip -d ./ffmpeg
     
    - name: copy ffmpeg
      run: cp -R ./ffmpeg/ffmpeg-master-latest-win64-gpl-shared/bin/ ./src/QuranVideoMaker/bin/Release/net9.0-windows/win-x64/publish/ffmpeg/
    
    - name: delete locales directory
      run: rm -f ./src/QuranVideoMaker/bin/Release/net9.0-windows/win-x64/publish/libraries/locales -r
      
    - name: copy QuranImageMaker.App* files to QuranVideoMaker publish directory
      run: cp -R ./src/QuranImageMaker.App/bin/Release/net9.0-windows/win-x64/publish/QuranImageMaker.App* ./src/QuranVideoMaker/bin/Release/net9.0-windows/win-x64/publish/

    - name: zip release
      run: |
        cd src/QuranVideoMaker/bin/Release/net9.0-windows/win-x64/publish
        zip -r ../../../../../../../QuranVideoMaker.zip *
        
    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v0.0.${{github.run_number}}
        release_name: Quran Video Maker v0.0.${{github.run_number}}
        draft: false
        prerelease: false

    - name: upload release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./QuranVideoMaker.zip
        asset_name: QuranVideoMaker.zip
        asset_content_type: application/zip
        
